class UsersController < ApplicationController
  before_filter(:signed_in_user, only: [:index, :edit, :update, :destroy])
  before_filter(:correct_user,   only: [:edit, :update])
  before_filter(:admin_user, only: :destroy)
  
  def index
    @users = User.paginate(page: params[:page])
  end
  
  def destroy
    User.find(params[:id]).destroy
    flash[:success] = "User destroyed."
    redirect_to users_url
  end  
  
  def new
    # Create a new user for filling in the forms.
    @user = User.new
  end
  
  def create
    # Create new user
    @user = User.new(params[:user])
    if @user.save
      sign_in(@user)
      # If successful save, show flash message
      flash[:success] = "Welcome to the Sample App!"    
      redirect_to @user
    else
      render 'new'
    end
  end
  
  def show
    # Find user with given user id.
    @user = User.find(params[:id])
  end
  
  def edit
    # @user is fetched in before_filter.correct_user
  end

  def update
    # @user is fetched in before_filter.correct_user
    if @user.update_attributes(params[:user])
      # Handle a successful update.
      flash[:success] = "Profile updated"
      # Need signin again, because session will be terminated otherwise
      # because the remember token gets reset when the user is saved 
      sign_in @user
      redirect_to @user
    else
      render 'edit'
    end
  end
  
  private
    def signed_in_user
      unless signed_in?
        store_location  # SessionsHelper method
        redirect_to(signin_url, notice: "Please sign in.")
      end
    end
    
    def correct_user
      # get current user
      @user = User.find(params[:id])
      redirect_to(root_path) unless current_user?(@user)
    end    
end
